@Todo: Actualizar endpoints
 swagger: '2.0'
 info:
   description: 'person api'
   version: 1.5.2
   title: Swagger
 host: local
 basePath: /v1
 tags:
   - name: person
     description: Operations about user
     externalDocs:
       description: Find out more about our person
       url: http://swagger.io
 schemes:
   - https
   - http
 paths:
   /person:
     get:
       tags:
         - person
       summary: Get all people from database
       description: ''
       operationId: getAllPeople
       produces:
         - application/json
       responses:
         '200':
           description: successful operation
           schema:
             $ref: '#/definitions/ListPeople'
         '400':
           description: Invalid list supplied
         '404':
           description: List not found
     post:
       tags:
         - "person"
       summary: "Add a new person to the persistance"
       description: ""
       operationId: "addPerson"
       consumes:
         - "application/json"
       produces:
         - "application/json"
       parameters:
         - in: "body"
           name: "body"
           description: "Person object that needs to be added to the databse"
           required: true
           schema:
             $ref: "#/definitions/PersonDto"
       responses:
         '200':
           description: successful operation
           schema:
             $ref: '#/definitions/ResponseDto'
         "405":
           description: "Invalid input"



   /person/{id}:
     get:
       tags:
         - "person"
       summary: "Find person by ID"
       description: "Returns a single person"
       operationId: "getPersonById"
       produces:
         - "application/json"
       parameters:
         - in: path
           name: id
           description: "ID of person to return"
           required: true
           type: "integer"
           format: "int64"
       responses:
         "200":
           description: "successful operation"
           schema:
             $ref: "#/definitions/PersonDto"
         "400":
           description: "Invalid ID supplied"
         "404":
           description: "Person not found"
     delete:
       tags:
         - "person"
       summary: "Delete a person by id"
       description: ""
       operationId: "deleteOnePerson"
       parameters:
         - name: id
           in: path
           required: true
           type: "integer"
       responses:
         '200':
           description: successful operation
           schema:
             $ref: '#/definitions/ResponseDto'
         "400":
           description: "Invalid ID supplied"
         "404":
           description: "Person not found"
   /person/findByName/{name}:
     get:
       tags:
         - person
       summary: Find person by Name
       description: Returns a list of people
       operationId: getPersonByName
       produces:
         - application/json
       parameters:
         - in: path
           name: name
           description: Name of person to return
           required: true
           type: string
       responses:
         "200":
           description: successful operation
           schema:
             $ref: '#/definitions/ListPeople'
         "400":
           description: "Invalid Name supplied"
         "404":
           description: "Person not found"
   /person/findByUsername/{username}:
     get:
       tags:
         - person
       summary: Find person by Username
       description: Returns a list of people
       operationId: findByUsername
       produces:
         - application/json
       parameters:
         - in: path
           name: username
           description: Username of person to return
           required: true
           type: string
       responses:
         "200":
           description: successful operation
           schema:
             $ref: '#/definitions/ListPeople'
         "400":
           description: "Invalid Username supplied"
         "404":
           description: "Person not found by username"

 definitions:
   ListPeople:
     type: object
     properties:
       PersonDto:
         type: array
         items:
           $ref: '#/definitions/PersonDto'

   PersonAttribute:
     type: object
     properties:
       id:
         type: integer
       idAttribute:
         type: integer
         format: int32
         description: Ref Attribute
       Attribute:
         type: string

   PersonDto:
     type: object
     properties:
       id:
         type: integer
         format: int64
       username:
         type: string
       firstName:
         type: string
       lastName:
         type: string
       email:
         type: string
       password:
         type: string
       phone:
         type: string
       userStatus:
         type: integer
         format: int32
         description: User Status
       refAtribute:
         type: integer
         items:
           $ref: '#/definitions/PersonAttribute'

   ResponseDto:
     type: object
     properties:
       code:
         type: integer
         format: int
       type:
         type: string
       message:
         type: string

 externalDocs:
   description: Find out more about Swagger
   url: http://swagger.io